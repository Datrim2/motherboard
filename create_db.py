from sqlalchemy import MetaData, Table, String, Integer, Column, Text, DateTime, Boolean, LargeBinary, ForeignKey, create_engine
# from datetime import datetime

metadata = MetaData()

engine = create_engine('sqlite:///motherboard.sqlite3')

motherboard = Table('MotherBoard', metadata,
    Column('id', Integer(), primary_key=True, autoincrement=True),
    Column('id_web', Integer(), nullable=False),
    Column('Title', String(200), nullable=False),
    Column('Subname', String(200)),
    Column('Link', String(400), nullable=False),
    Column('Desc', String(2000)),
    Column('Ean', String(200)),
    Column('Release', DateTime(), nullable=False),
    Column('Product_line', String(200), nullable=False),
    Column('Picture', LargeBinary, nullable=False),
    Column('Color', String(200)),
    Column('Label', String(200)))

ram = Table('RAM', metadata, 
    Column('id', Integer(), primary_key=True, autoincrement=True),
    Column('motherboard_id', ForeignKey("MotherBoard.id")),
    Column('specifications_id', ForeignKey("Specifications.id")),
    Column('type_memory', String(200), nullable=False),
    Column('Vendor', String(200), nullable=False),
    Column('Model', String(200),  nullable=False),
    Column('DDR', String(200), nullable=False),
    Column('SPD Speed', String(200), nullable=False),
    Column('Supported Speed', String(200), nullable=False),
    Column('Chipset', String(200), nullable=False),
    Column('Voltage', String(200), nullable=False),
    Column('Sided', String(200), nullable=False),
    Column('Size', String(200), nullable=False),
    Column('1|2|4 DIMM', String(200), nullable=False),
)

specifications = Table('Specifications',metadata,
                Column('id', Integer(), primary_key=True, autoincrement=True),
                Column('Model', String(200), nullable=False),
                Column('CL', String(20), nullable=False),
                Column('tRCmin', String(20), nullable=False),
                Column('tRFCmin', String(20), nullable=False),
                Column('tRASmin', String(20), nullable=False),
                Column('Maximum Operating', String(20)),
                Column('UL', String(20), nullable=False),
                Column('Operating Temperature', String(20), nullable=False),
                Column('Storage Temperature', String(20), nullable=False),
                Column('Description', String(2000), nullable=False),
                Column('features_id', ForeignKey("Features.id")),
                Column('timing_id', ForeignKey("Timing.id")),
                Column('DOP', String(200)),
                Column('Picture', LargeBinary),
)

features = Table('Features',metadata,
          Column('id', Integer(), primary_key=True, autoincrement=True),
          Column('F#1', String(200), nullable=False),
          Column('F#2', String(200), nullable=False),
          Column('F#3', String(200), nullable=False),
          Column('F#4', String(200), nullable=False),
          Column('F#5', String(200), nullable=False),
          Column('F#6', String(200), nullable=False),
          Column('F#7', String(200), nullable=False),
          Column('F#8', String(200), nullable=False),
          Column('F#9', String(200)),
          Column('F#10', String(200)),
          Column('F#11', String(200)),
          Column('F#12', String(200)),
          Column('F#13', String(200)),
          Column('F#14', String(200)),
          Column('F#15', String(200)),
          Column('F#16', String(200)),
          Column('F#17', String(200)),
          Column('F#18', String(200)),
          Column('F#19', String(200)),
          Column('F#20', String(200)),
)

timing = Table('Timing',metadata,
        Column('id', Integer(), primary_key=True, autoincrement=True),
        Column('Default', String(200), nullable=False),
        Column('XMP1', String(200)),
        Column('XMP2', String(200)),
        Column('XMP3', String(200)),
        Column('EXPO1', String(200)),
        Column('EXPO2', String(200)),
        Column('Default_name', String(200)),
)

specifications_corsair = Table('Specifications_corsair',metadata,
        Column('id', Integer(), primary_key=True, autoincrement=True),
        Column('code', String(200), nullable=False),
        Column('name', String(200), nullable=False),
        Column('description', String(200)),
        Column('Fan Included', String(200)),
        Column('Memory Series', String(200)),
        Column('Memory Type', String(200)),
        Column('Memory Color', String(200)),
        Column('SPD Latency', String(200)),
        Column('SPD Speed', String(200)),
        Column('SPD Voltage', String(200)),
        Column('Speed Rating', String(200)),
        Column('Compatibility', String(200)),
        Column('Memory Size', String(200)),
        Column('Tested Latency', String(200)),
        Column('Tested Voltage', String(200)),
        Column('Tested Speed', String(200)),
        Column('Heat Spreader', String(200)),
        Column('Package Memory Format', String(200)),
        Column('Performance Profile', String(200)),
        Column('Package Memory Pin', String(200)),
        Column('Memory Package contents', String(200)),
        Column('Memory Compatibility', String(200)),
        Column('LED Lighting', String(200)),
        Column('Single_Multi_Zone', String(200)),
        Column('PMIC_Type', String(200)),
        )
images = Table('Images',metadata,
        Column('id', Integer(), primary_key=True, autoincrement=True),
        Column('spec_corsair_id', ForeignKey("Specifications_corsair.id")),
        Column('type', String(50)),
        Column('desc', String(2000)),
        Column('image', LargeBinary),
)
all_corsair = Table('corsair',metadata,
        Column('id', Integer(), primary_key=True, autoincrement=True),
        Column('code', String(200), nullable=False),
        Column('name', String(200)),
        Column('url', String(2000)),
        Column('status', Integer()),
        )
specifications_Gskill = Table('Specifications_Gskill',metadata,
        Column('id', Integer(), primary_key=True, autoincrement=True),
        Column('code', String(200), nullable=False),
        Column('name', String(200), nullable=False),
        Column('description', String(200)),
        Column('Memory Type', String(200)),
        Column('Capacity', String(200)),
        Column('Multi-Channel', String(200)),
        Column('Tested Speed', String(200)),
        Column('Tested Latency', String(200)),
        Column('Tested Voltage', String(200)),
        Column('Registered/Unbuffered', String(200)),
        Column('Error Checking', String(200)),
        Column('SPD Speed', String(200)),
        Column('SPD Voltage', String(200)),
        Column('Fan Included', String(200)),
        Column('Warranty', String(200)),
        Column('Features', String(200)),
        Column('Additional Notes', String(200)),
        Column('Form Factor', String(200)),
        Column('Channel Config', String(200)),
        Column('SPD Latency', String(200)),
        Column('CAS Latency', String(200)),
        Column('DRAM Voltage', String(200)),
        )

images_gskill = Table('Images_Gskill',metadata,
        Column('id', Integer(), primary_key=True, autoincrement=True),
        Column('spec_gskill', ForeignKey("Specifications_Gskill.id")),
        Column('image', LargeBinary),
)

all_gskill = Table('gskill',metadata,
        Column('id', Integer(), primary_key=True, autoincrement=True),
        Column('code', String(200), nullable=False),
        Column('url', String(2000)),
        Column('status', Integer()),
        )

specifications_Exceleram = Table('Specifications_Exceleram',metadata,
        Column('id', Integer(), primary_key=True, autoincrement=True),
        Column('name', String(200), nullable=False),
        Column('code', String(200), nullable=False),
        Column('Capacity', String(200)),
        Column('Speed', String(200)),
        Column('Latency', String(200)),
        Column('Volt', String(200)),
        Column('Dop', String(200)),
        Column('Memory Type', String(20)),
        Column('Package Memory Format', String(20)),
        )

images_Exceleram = Table('Images_Exceleram',metadata,
        Column('id', Integer(), primary_key=True, autoincrement=True),
        Column('spec_Exceleram', ForeignKey("Specifications_Exceleram.id")),
        Column('image', LargeBinary),
)

metadata.create_all(engine)